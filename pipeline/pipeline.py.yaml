apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: safe-intelligence-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.12, pipelines.kubeflow.org/pipeline_compilation_time: '2022-06-09T17:53:24.423590',
    pipelines.kubeflow.org/pipeline_spec: '{"name": "safe-intelligence-pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.12}
spec:
  entrypoint: safe-intelligence-pipeline
  templates:
  - name: collect-files
    container:
      args: []
      command: [python3, ./file-collect.py, --user, DanielSCrouch, --repo, safe-intel,
        --branch, main, --subdirectory, files, --outdir, /tmp/tmp, --respath, /tmp/outputs/respath/data]
      image: index.docker.io/duartcs/filecollect:latest
      volumeMounts:
      - {mountPath: /mnt', name: volume-creation}
    inputs:
      parameters:
      - {name: volume-creation-name}
    outputs:
      artifacts:
      - {name: collect-files-respath, path: /tmp/outputs/respath/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.12
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Downloads
          files from Github Repository directory.", "implementation": {"container":
          {"command": ["python3", "./file-collect.py", "--user", {"inputValue": "user"},
          "--repo", {"inputValue": "repo"}, "--branch", {"inputValue": "branch"},
          "--subdirectory", {"inputValue": "subdirectory"}, "--outdir", {"inputValue":
          "outdir"}, "--respath", {"outputPath": "respath"}], "image": "index.docker.io/duartcs/filecollect:latest"}},
          "inputs": [{"default": "DanielSCrouch", "description": "Github username.",
          "name": "user", "type": "String"}, {"default": "safe-intel", "description":
          "Github repository name.", "name": "repo", "type": "String"}, {"default":
          "main", "description": "Github branch name.", "name": "branch", "type":
          "String"}, {"default": "files", "description": "Github sub-directory name.",
          "name": "subdirectory", "type": "String"}, {"default": "/tmp/tmp", "description":
          "Path to local directory to save files to.", "name": "outdir", "type": "String"}],
          "name": "Collect Files", "outputs": [{"description": "Path to file to save
          results to. Results are paths to each downloaded file.", "name": "respath",
          "type": "Data"}]}', pipelines.kubeflow.org/component_ref: '{"digest": "9623aa19cf2152e6906b1689fd260ead55896d9cc7d15847e33fd67b8275aab4"}',
        pipelines.kubeflow.org/arguments.parameters: '{"branch": "main", "outdir":
          "/tmp/tmp", "repo": "safe-intel", "subdirectory": "files", "user": "DanielSCrouch"}'}
    volumes:
    - name: volume-creation
      persistentVolumeClaim: {claimName: '{{inputs.parameters.volume-creation-name}}'}
  - name: safe-intelligence-pipeline
    dag:
      tasks:
      - name: collect-files
        template: collect-files
        dependencies: [volume-creation]
        arguments:
          parameters:
          - {name: volume-creation-name, value: '{{tasks.volume-creation.outputs.parameters.volume-creation-name}}'}
      - {name: volume-creation, template: volume-creation}
  - name: volume-creation
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-mypvc'
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    outputs:
      parameters:
      - name: volume-creation-manifest
        valueFrom: {jsonPath: '{}'}
      - name: volume-creation-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: volume-creation-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.12
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
